<?php

namespace Formation\VocabulaireBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * VocabulaireThemeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class VocabulaireThemeRepository extends EntityRepository
{
    private function fetch($query)
    {
        $stmt = $this->getEntityManager()->getConnection()->prepare($query);
        $stmt->execute();
        return  $stmt->fetchAll();
    }

    public function getVocabulaireThemeByVocabulaireAndTheme($id_vocabulaire, $id_theme) {
        $sql_test_theme ="select * from vocabulaire_theme where id_theme='$id_theme' AND id_vocabulaire='$id_vocabulaire' ";

        return $this->fetch($sql_test_theme);
    }

    public function getVocabulaireThemeByVocabulaireAndTheme2($id_theme, $id) {
        $query = $this
            ->createQueryBuilder('vt')
            ->select('vt')
            ->innerJoin('vt.vocabulaire', 'v')
            ->innerJoin('vt.theme', 't')
            ->where('v.id = :id_vocabulaire AND t.id = :id_theme')
            ->setParameter('id_vocabulaire', $id)
            ->setParameter('id_theme', $id_theme)
            ->getQuery();

        return $query->getResult();
    }

    public function getVocabulaireThemeByVocabulaire($id_vocabulaire) {
        $query = $this
                ->createQueryBuilder('vt')
                ->select('v.id as id_vocabulaire, t.libelleTheme as libelle_theme')
                ->innerJoin('vt.vocabulaire', 'v')
                ->innerJoin('vt.theme', 't')
                ->where('v.id = :id_vocabulaire')
                ->setParameter('id_vocabulaire', $id_vocabulaire)
                ->getQuery();

        return $query->getResult();
    }

    public function modifyOneCritere($id_vocabulaire) {
        $query = $this
                ->createQueryBuilder('vt')
                ->select('distinct t.libelleTheme as libelle_theme')
                ->innerJoin('vt.vocabulaire', 'v')
                ->innerJoin('vt.theme', 't')
                ->where('v.id = :id_vocabulaire')
                ->setParameter('id_vocabulaire', $id_vocabulaire)
                ->groupBy("v.id")
                ->getQuery();

        return $query->getResult();
    }
}
