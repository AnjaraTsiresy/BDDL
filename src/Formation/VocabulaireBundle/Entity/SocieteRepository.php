<?php

namespace Formation\VocabulaireBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * SocieteRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SocieteRepository extends EntityRepository {

    public function verifSociete($societe) {
        $societe_lower = strtolower($societe);
        $societe_trim = trim($societe_lower);

        $query = $this
                ->createQueryBuilder('s')
                ->select('s')
                ->where('lower(s.description) = :societe')
                ->setParameter('societe', $societe_trim)
                ->getQuery();
        return count($query->getResult());
    }

    public function getNbSocietes($societe) {
        $societe_lower = strtolower($societe);
        $societe_trim = trim($societe_lower);
        $query = array();
        if ($societe != "") {
            $query = $this
                    ->createQueryBuilder('s')
                    ->select('s.id as id_societe')
                    ->where('lower(s.description) LIKE :societe')
                    ->setParameter('societe', '%' . $societe_trim . '%')
                    ->orderBy('s.description', 'asc')
                    ->getQuery();
        } else {

            $query = $this
                    ->createQueryBuilder('s')
                    ->select('s.id as id_societe')
                    ->orderBy('s.description', 'asc')
                    ->getQuery();
        }
        return count($query->getResult());
    }

    public function findSociete($societe) {
        $societe_lower = strtolower($societe);
        $societe_trim = trim($societe_lower);
        $query = array();
        if ($societe != "") {
            $query = $this
                    ->createQueryBuilder('s')
                    ->select('s.id as id_societe, s.description as description, s.codeTiers as codeTiers')
                    ->where('lower(s.description) LIKE :societe')
                    ->setParameter('societe', '%' . $societe_trim . '%')
                    ->orderBy('s.description', 'asc')
                    ->getQuery();
        } else {

            $query = $this
                    ->createQueryBuilder('s')
                    ->select('s.id as id_societe, s.description as description, s.codeTiers as codeTiers')
                    ->orderBy('s.description', 'asc')
                    ->getQuery();
        }
        return $query->getResult();
    }

}
