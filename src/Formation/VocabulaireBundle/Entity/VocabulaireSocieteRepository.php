<?php

namespace Formation\VocabulaireBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * VocabulaireSocieteRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class VocabulaireSocieteRepository extends EntityRepository {

    private function fetch($query)
    {
        $stmt = $this->getEntityManager()->getConnection()->prepare($query);
        $stmt->execute();
        return  $stmt->fetchAll();
    }

    public function getVocSocBySocAndVoc($id_societe, $id_vocabulaire)
    {
        $sql_test_societe ="select * from vocabulaire_societe where id_societe='$id_societe' AND id_vocabulaire='$id_vocabulaire' ";
        return $this->fetch($sql_test_societe);

    }

    public function getVocSocBySocAndVoc2($id)
    {
        $id_societe = 653;
        $query = $this
            ->createQueryBuilder('vs')
            ->select('vs')
            ->innerJoin('vs.vocabulaire', 'v')
            ->innerJoin('vs.societe', 's')
            ->where('v.id = :id_vocabulaire AND s.id = 653')
            ->setParameter('id_vocabulaire', $id)
            ->getQuery();

        return $query->getResult();

    }

    public function getVocabulaireSocieteByVocabulaire($id_vocabulaire) {
        $query = $this
                ->createQueryBuilder('vs')
                ->select('v.id as id_vocabulaire, s.description as description')
                ->innerJoin('vs.vocabulaire', 'v')
                ->innerJoin('vs.societe', 's')
                ->where('v.id = :id_vocabulaire')
                ->setParameter('id_vocabulaire', $id_vocabulaire)
                ->getQuery();

        return $query->getResult();
    }

    public function modifyOneCritere($id_vocabulaire) {
        $query = $this
                ->createQueryBuilder('vs')
                ->select('distinct s.description as description')
                ->innerJoin('vs.vocabulaire', 'v')
                ->innerJoin('vs.societe', 's')
                ->where('v.id = :id_vocabulaire')
                ->setParameter('id_vocabulaire', $id_vocabulaire)
                ->groupBy("v.id")
                ->getQuery();

        return $query->getResult();
    }

}
